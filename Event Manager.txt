fun main() {

    val newEvent: Event = Event(
        title = "Estudiar Kotlin",
        description = "Comprometerse a estudiar Kotlin al menos 15 minutos al día",
        daypart = Daypart.EVENING,
        durationInMinutes = 15
    )

    println(newEvent)

    var events = mutableListOf <Event>(

        Event(title = "Wake up", description = "Time to get up", daypart = Daypart.MORNING, durationInMinutes = 0),
        Event(title = "Eat breakfast", daypart = Daypart.MORNING, durationInMinutes = 15),
        Event(title = "Learn about Kotlin", daypart = Daypart.AFTERNOON, durationInMinutes = 30),
        Event(title = "Practice Compose", daypart = Daypart.AFTERNOON, durationInMinutes = 60),
        Event(title = "Watch latest DevBytes video", daypart = Daypart.AFTERNOON, durationInMinutes = 10),
        Event(title = "Check out latest Android Jetpack library", daypart = Daypart.EVENING, durationInMinutes = 45)

    )

    val shortEvents = events.filter { it.durationInMinutes < 60 }
    println("Tienes ${shortEvents.size} eventos cortos.")

    val eventMap = events.groupBy { it.daypart }

    println()
    println()

    eventMap.forEach{ daypart, events ->

        println("$daypart: ${events.size}")

    }

    println("Last event of the day: ${events.last().title}")

    println()
    println()

    println("Duration of first event of the day: ${events.first().durationOfEvent}")
}

enum class Daypart{
    MORNING, AFTERNOON, EVENING
}

data class Event (
    val title: String,
    val description: String? = null,  //Faltó tabajar con la nulidad
    val daypart: Daypart,
    val durationInMinutes: Int
){

}

val Event.durationOfEvent: String
    get() = if(durationInMinutes < 60) "short" else "long"